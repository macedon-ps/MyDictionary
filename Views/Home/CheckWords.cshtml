@model CheckWordsViewModel;


<div class="homePage">

    @await Html.PartialAsync("HomeButtonPartial")

    <div class="homeHeader">

        <h1 class="title">My dictionary</h1>
        <hr class="horizontal-line" /><br />
        
        <div class="displayFlex">
            <div class="col-3 col-12-medium flexColumn">
                <div class="card inline">
                    <span>
                        <p>@Model.SelectedWords.FirstOrDefault(x => x.Id == Model.IndexOfCheckedWord).RusValue</p>
                    </span>
                </div>
                <div class="border-box inline">
                    <p>Index: @Model.IndexOfCheckedWord</p>
                    <p>Часть речи: @Model.SelectedWords.First().PartOfSpeech</p>
                </div>
            </div>

            <div class="col-9 col-12-medium">
                
                <form method="post">
                                                                               
                    <div class="displayFlexRow wrap">
                        @foreach (var item in Model.SelectedWords)
                        {
                            <input type="submit" class="card" asp-controller="Home" 
                            asp-action="CheckWords"
                            asp-route-idWord="@Model.IndexOfCheckedWord"
                            asp-route-allQuestion="@Model.AllQuestionsNumber"
                            asp-route-goodAnswers="@Model.GoodAnswersNumber"
                            asp-route-badAnswers="@Model.BadAnswersNumber"
                            asp-route-grades="@Model.Grades"
                            asp-route-idSelectedAnswer="@item.Id" value="@item.EngValue @item.Id" />
                        }
                    </div>
                    @{
                        var goodMarksLevel = 0.0m;
                        var badMarksLevel = 0.0m;

                        if(Model.AllQuestionsNumber != 0)
                        {
                            goodMarksLevel = Math.Round((Model.GoodAnswersNumber * 100.0m / Model.AllQuestionsNumber), 2);
                            badMarksLevel = Math.Round((Model.BadAnswersNumber * 100.0m / Model.AllQuestionsNumber), 2);
                        }
                    }
                    <div class="border-box">
                        <div>
                            <p>Оценка: @Model.Grades</p>
                        </div>
                        <div class="flexRow space-between">
                            <div><p>Всего вопросов: @Model.AllQuestionsNumber</p></div>
                            <div>
                                <p>Правильно: @Model.GoodAnswersNumber (@goodMarksLevel %)</p>
                            </div>
                            <div>
                                <p>Не правильно: @Model.BadAnswersNumber (@badMarksLevel %)</p>
                            </div>
                        </div>
                    </div>
                </form>
              </div>
        </div>
    </div>
</div>
